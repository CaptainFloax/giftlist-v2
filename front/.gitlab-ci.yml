workflow:
    rules:
        # Dev Interne
        - if: $CI_COMMIT_BRANCH == "main"
          variables:
              ENVIRONMENT: prod
              FO_SOURCE: ./dist/
              FO_TARGET: ./giftlist.capitaine.dev/
              SSH_KEY: $SSH_KEY
              SSH_USERNAME: $SSH_USERNAME
              SSH_HOST: $SSH_HOST
              SSH_PORT: $SSH_PORT

.add_ssh_key:
    before_script:
        - apk update
        - apk add rsync
        - 'which ssh-agent || ( apk add --no-cache openssh-client )'
        - eval $(ssh-agent -s)
        - echo "$SSH_KEY" | ssh-add -
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

.front_setup:
    before_script:
        - cd front

stages:
    - install
    - build
    - deploy

# Select Docker image to run pipeline
image: node:18-alpine3.17

install:
    extends: .front_setup
    stage: install
    cache:
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - front/node_modules/
    script:
        - npm ci

build:
    extends: .front_setup
    stage: build
    cache:
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - front/node_modules/
        policy: pull
    script:
        - cp ../.env.$ENVIRONMENT ./.env.$ENVIRONMENT
        - npm run build:$ENVIRONMENT
    artifacts:
        paths:
            - front/dist/*
    dependencies:
        - install

deploy:
    stage: deploy
    extends: .add_ssh_key
    environment:
        name: $ENVIRONMENT
    script:
        - cd front
        - rsync -a $FO_SOURCE -e "ssh -p $SSH_PORT" $SSH_USERNAME@$SSH_HOST:$FO_TARGET
    dependencies:
        - build
